package downcasting;

import java.util.ArrayList;
import java.util.concurrent.ArrayBlockingQueue;

class Animal{
	public void breathe() {
		System.out.println("동물이 숨을쉽니다.");
	}
}

 class Human extends Animal{
	public void breathe() {
		System.out.println("동물이 숨을쉽니다.");
	}
	public void read() {
		System.out.println("사람이 책을 읽습니다.");
	}
	
class Tiger extends Animal{
		public void breathe() {
			System.out.println("호랑이 숨을쉽니다.");
		}
		public void hunt() {
			System.out.println("호랑이가 사냥을 합니다.");
		}
	
class Eagle extends Animal{
		public void breathe() {
			System.out.println("독수리가 숨을쉽니다.");
		}
		public void hunt() {
			System.out.println("독수리가 사냥을 합니다.");
			}
	
}

public class AnimalTest{
	static ArrayList<Animal> animalist = new ArrayList<>());
	public static void main(String[] ages) {
		//Human객체를 생성
		Animal human = new Human();
		
		//생성된 객체를 arryayList에 w저장
		animalList.add(human);
		System.out.println(human);
		
		System.out.println(animalist.get(0));
		
		
		
	}
}
//	public static void main(String[] args) {
//		//부모 타입으로 자동 형변환을 구현
//		Animal animal =new Human();
//		animal.breathe();
//		//다운 캐스팅으로 강제 형변환 밸생
//		if(animal instanceof Human) { // animal 이 Human 의 인스턴스라면
//			Human man = (Human)animal;
//			an.read();
//		}
//	}
}
}